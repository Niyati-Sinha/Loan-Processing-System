<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd     
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- Step 3: Add support for component scanning -->
	<context:component-scan base-package="com.rayman.lps" />

	<!-- Step 4: Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven/>
   
	<!-- Step 5: Define Spring MVC view resolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>

    <!-- Load the custom message resource -->
    <bean id="messageSource" 
          class="org.springframework.context.support.ResourceBundleMessageSource">
     
        <property name="basenames" value="resources/messages" />
     
    </bean>
    <!-- Step-1 Define database connection pool -->
    <bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" value="com.mysql.jdbc.Driver"/>
    <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/testdb"/>
    <property name="user" value="root"/>
    <property name="password" value="Ray$1742"/>
    <property name="minPoolSize" value="5"/>
     <property name="maxPoolSize" value="20"/>
      <property name="maxIdleTime" value="30000"/>
    
    </bean>
    
   <!-- Step-2 Setup hibernate session factory -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
   <property name="dataSource" ref="myDataSource"/>
   <property name="packagesToScan" value="com.rayman.lps.mvc"/>
   <property name="hibernateProperties">
   <props>
   <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
   <prop key="hibernate.show_sql">true</prop>
   </props>
   </property>
   </bean>
   
   <!-- Step-3 Setting up the transaction manager  -->
   <bean id="myTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
   <property name="sessionFactory" ref="sessionFactory"></property>
   </bean>
   
    <!-- Step-4 Enable configuration of transactional behaviour based on annotattions-->
   
     <tx:annotation-driven transaction-manager="myTransactionManager"></tx:annotation-driven> 
   
   </beans>





